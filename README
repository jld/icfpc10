This is, mostly, the ICFP Programming Competition 2010 submission of
the team Celestial Dire Badger (i.e., me).

This repository has been pruned with git filter-branch to remove files
of limited value -- namely, data screen-scraped from the contest web
site, and mass-autogenerated solutions to same -- in order not to blow
too much of my github quota on pointlessness.  (Normally I might not
have checked such things in in the first place, but git scales well
enough that I just didn't care.)

I helpfully did not leave any notes at the time as to which files do
what, but some of it is obvious from the names.  Most of the modules
with names ending in -matic are automated solvers; the lexical item
"bear" is probably short for "not faster than the bear", referencing
an old joke and indicating something mediocre that nonetheless is
superior to some of its competition; the "cheese" is likely meant to
indicate that a technique is "cheesy", or embarrassingly simple but
still effective; and I think "turkey" means that I was running a little
low on sleep and had left the realm of coherent free-association.

The shell scripts, used for screen-scraping (at first by copy-and-paste
via xclip(1), then later by curl(1), and for the last few hours finally
made fully automatic so I could sleep) may also be of interest.

If anyone looks at the commit history, know that there are going to be a
bunch of empty and/or meaningless-seeming commits because I took out the
bulk data.

Possibly the most interesting part of this is fancysynth.ml, which
generates logic circuits from desired output with a recursive method
which I used to understand but would now have to stare at things for a
while in order to explain coherently.  The efficiency is worse than what
at least one other team managed, but not by much.
